# yaml
components_manager:
    coro_pool:
        initial_size: 500             # Preallocate 500 coroutines at startup.
        max_size: 1000                # Do not keep more than 1000 preallocated coroutines.

    task_processors:                  # Task processor is an executor for coroutine tasks

        main-task-processor:          # Make a task processor for CPU-bound couroutine tasks.
            worker_threads: 4         # Process tasks in 4 threads.
            thread_name: main-worker  # OS will show the threads of this task processor with 'main-worker' prefix.

        fs-task-processor:            # Make a separate task processor for filesystem bound tasks.
            thread_name: fs-worker
            worker_threads: 4

    default_task_processor: main-task-processor

    components:                       # Configuring components that were registered via component_list
        server:
            listener:                 # configuring the main listening socket...
                port: 8083            # ...to listen on this port and...
                task_processor: main-task-processor    # ...process incoming requests on this task processor.
        logging:
            fs-task-processor: fs-task-processor
            loggers:
                default:
                    file_path: '@stderr'
                    level: debug
                    overflow_behavior: discard  # Drop logs if the system is too busy to write them down.

        pg-init: {}

        tracer:                              # Component that helps to trace execution times and requests in logs.
            service-name: service_dynamic_configs   # "You know. You all know exactly who I am. Say my name. " (c)

        taxi-config:                      # Dynamic config storage options, do nothing
            fs-cache-path: ''
        taxi-config-fallbacks:            # Load options from file and push them into the dynamic config storage.
            fallback-path: /Users/alexiprof/Develop/OpenSource/US/service_dynamic_configs/configs/dynamic_config_fallback.json
          #fallback-path: /etc/service_dynamic_configs/dynamic_config_fallback.json
        manager-controller:
        statistics-storage:
        auth-checker-settings:
        dns-client:
            fs-task-processor: fs-task-processor
        handler-ping:
            path: /ping
            method: GET
            task_processor: main-task-processor
            throttling_enabled: false
            url_trailing_slash: strict-match

        handler-configs-values:                    # Finally! Our handler.
            path: /configs/values                  # Registering handler by URL '/hello'.
            method: POST              # It will only reply to GET (HEAD) and POST requests.
            task_processor: main-task-processor  # Run it on CPU bound task processor
              #        handler-configs:
              #            path: /configs
              #            method: POST
              #            task-processor: main-task-processor
              #        handler-configs-delete:
              #            path: /configs/delete
              #            method: POST
              #            task-processor: main-task-processor

        testsuite-support: {}


        configs-cache:
            pgcomponent: settings-database
            update-interval: 10s
            full-update-interval: 1m
            update-correction: 2s
            update-jitter: 1s
            chunk-size: 100
        settings-database:
          #dbconnection: 'postgresql://testsuite@localhost:15433/postgres'
            dbconnection: 'postgresql://seal@localhost:5432/seal'
            blocking_task_processor: fs-task-processor
            handlers_cmd_ctl_task_data_path_key: http-handler-path      # required for POSTGRES_HANDLERS_COMMAND_CONTROL
            handlers_cmd_ctl_task_data_method_key: http-request-method  # required for POSTGRES_HANDLERS_COMMAND_CONTROL
            dns_resolver: async

